"use strict";(self.webpackChunkClickHousePlay=self.webpackChunkClickHousePlay||[]).push([[592],{738:()=>{function l(o,u,c,n,s,t,e){try{var r=o[t](e),a=r.value}catch(i){return void c(i)}r.done?u(a):Promise.resolve(a).then(n,s)}class p{post(u,c,n=[]){return function h(o){return function(){var u=this,c=arguments;return new Promise(function(n,s){var t=o.apply(u,c);function e(a){l(t,n,s,e,r,"next",a)}function r(a){l(t,n,s,e,r,"throw",a)}e(void 0)})}}(function*(){return new Promise((s,t)=>{try{let e=new XMLHttpRequest;e.open("POST",u,!0),n.length>0&&n.forEach(r=>{Object.entries(r).forEach(([a,i])=>{e.setRequestHeader(a,i)})}),e.send(c),e.onerror=r=>{console.log("xhr.onerror",{data:r}),t(e)},e.onabort=r=>{console.log("xhr.onabort",{data:r}),t(e)},e.ontimeout=r=>{console.log("xhr.ontimeout",{data:r}),t(e)},e.onload=r=>{console.log({data:r}),200===e.status?s(e):t(e)}}catch(e){console.error({error:e})}})})()}}addEventListener("message",({data:o})=>{try{o=JSON.parse(o)}catch(t){}const u=new p,{url:c,query:n,headers:s}=o;u.post(c,n,s||[]).then(t=>{postMessage(t.response)},t=>{postMessage(JSON.stringify({isError:!0,message:t.responseText}))})})}}]);