"use strict";(self.webpackChunkClickHousePlay=self.webpackChunkClickHousePlay||[]).push([[592],{738:()=>{function l(o,u,i,n,s,r,e){try{var t=o[r](e),a=t.value}catch(c){return void i(c)}t.done?u(a):Promise.resolve(a).then(n,s)}class p{post(u,i,n=[]){return function h(o){return function(){var u=this,i=arguments;return new Promise(function(n,s){var r=o.apply(u,i);function e(a){l(r,n,s,e,t,"next",a)}function t(a){l(r,n,s,e,t,"throw",a)}e(void 0)})}}(function*(){return new Promise((s,r)=>{try{let e=new XMLHttpRequest;e.open("POST",u,!0),n.length>0&&n.forEach(t=>{Object.entries(t).forEach(([a,c])=>{e.setRequestHeader(a,c)})}),e.send(i),e.onerror=t=>{console.log("xhr.onerror",{data:t}),r(e)},e.onabort=t=>{console.log("xhr.onabort",{data:t}),r(e)},e.ontimeout=t=>{console.log("xhr.ontimeout",{data:t}),r(e)},e.onload=t=>{200===e.status?s(e):r(e)}}catch(e){console.error({error:e})}})})()}}addEventListener("message",({data:o})=>{try{o=JSON.parse(o)}catch(r){}const u=new p,{url:i,query:n,headers:s}=o;u.post(i,n,s||[]).then(r=>{postMessage(r.response)},r=>{postMessage(JSON.stringify({isError:!0,message:r.responseText}))})})}}]);