"use strict";(self.webpackChunkClickHousePlay=self.webpackChunkClickHousePlay||[]).push([[592],{738:()=>{function h(s,u,i,n,o,t,e){try{var r=s[t](e),a=r.value}catch(c){return void i(c)}r.done?u(a):Promise.resolve(a).then(n,o)}class p{post(u,i,n=[]){return function l(s){return function(){var u=this,i=arguments;return new Promise(function(n,o){var t=s.apply(u,i);function e(a){h(t,n,o,e,r,"next",a)}function r(a){h(t,n,o,e,r,"throw",a)}e(void 0)})}}(function*(){return new Promise((o,t)=>{try{let e=new XMLHttpRequest;e.open("POST",u,!0),n.length>0&&n.forEach(r=>{Object.entries(r).forEach(([a,c])=>{e.setRequestHeader(a,c)})}),e.send(i),e.onerror=r=>{t(e)},e.onabort=r=>{t(e)},e.ontimeout=r=>{t(e)},e.onload=r=>{200===e.status?o(e):t(e)}}catch(e){console.error({error:e})}})})()}}addEventListener("message",({data:s})=>{try{s=JSON.parse(s)}catch(t){}const u=new p,{url:i,query:n,headers:o}=s;u.post(i,n,o||[]).then(t=>{postMessage(t.response)},t=>{postMessage(JSON.stringify({isError:!0,message:t.responseText}))})})}}]);